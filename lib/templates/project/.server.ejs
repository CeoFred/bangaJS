require("express-async-errors");
const app = require("express")();
const session = require('express-session');
const { v4: uuidv4 } = require('uuid');

const sess = {
  secret: 'banga_js',
  cookie: {},
   genid: function(req) {
    return uuidv4(); // use UUIDs for session IDs
  },
}
 
if (app.get('env') === 'production') {
  app.set('trust proxy', 1) // trust first proxy
  sess.cookie.secure = true // serve secure cookies
}
 
const {PORT} = process.env;

var sess = {
  secret: 'keyboard cat',
  cookie: {}
}
 
if (app.get('env') === 'production') {
  app.set('trust proxy', 1) // trust first proxy
  sess.cookie.secure = true // serve secure cookies
}

// Add session to express middleware chain
app.use(session(sess));

app.use(session(sess))
// Pre-route middlewares
require("./src/middlewares/pre-route.middleware")(app);

// API routes
app.use("/api", require("./src/routes"));

// Ping route for testing connection
app.get("/ping", (req, res) => res.status(200).send("Hello world!"));

// Error middlewares
require("./src/middlewares/error.middleware")(app);


app.listen(PORT, async () => {
  //Initialize MongoDB
  await require("./src/config/mongo-db.config")()
  console.log(`:::> Server listening on port ${PORT} @ http://localhost:${PORT}`);
});

app.on("error", (error) => {
  console.error(`<::: An error occiurred in our server: \n ${error}`);
});